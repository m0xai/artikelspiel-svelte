{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Frage.svelte","../../src/Punkte.svelte","../../src/Antworten.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.32.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let frageText;\n</script>\n\n<div class=\"frageTextDiv\">\n  <h3>{frageText}</h3>\n</div>\n\n<style>\n  .frageTextDiv {\n    font-size: 24px;\n    font-weight: bold;\n    text-align: center;\n    margin: 100px 5px 60px;\n  }\n</style>\n","<script>\n  export let insFragen;\n  export let plusPunkte;\n  export let minusPunkte;\n</script>\n\n<div class=\"insFragen\">\n  Antworten: <span class=\"insFragenZahl\">{insFragen}</span>\n</div>\n<div class=\"plusPunkte\">\n  Richtig:\n  <span class=\"plusPunkteZahl\">{plusPunkte}</span>\n</div>\n<div class=\"minusPunkte\">\n  Falsch:\n  <span class=\"minusPunkteZahl\">{minusPunkte}</span>\n</div>\n\n<style>\n  .insFragen {\n    margin: 15px;\n  }\n  .minusPunkte,\n  .plusPunkte {\n    margin: 15px;\n    display: inline;\n  }\n  .plusPunkteZahl,\n  .minusPunkteZahl {\n    font-weight: bold;\n  }\n\n  .plusPunkteZahl {\n    color: #22e358;\n  }\n  .minusPunkteZahl {\n    color: #f65a5a;\n  }\n</style>\n","<script>\n  export let antwortText;\n  export let pruefAntwort;\n</script>\n\n<button class=\"antwort\" on:click={() => pruefAntwort(antwortText)}\n  >{antwortText}</button\n>\n\n<style>\n  button.antwort {\n    background-color: white;\n    border-radius: 5px;\n    font-size: 24px;\n    width: 100px;\n    height: 50px;\n    margin: 10px;\n    cursor: pointer;\n  }\n\n  button.antwort:active {\n    background-color: orange;\n    color: white !important;\n  }\n\n  button.antwort:nth-child(1) {\n    box-shadow: 0 0 10px #5484ff;\n    border: 2px solid #5484ff;\n    color: #5484ff;\n  }\n  button.antwort:nth-child(3) {\n    box-shadow: 0 0 10px #f6ca2a;\n    border: 2px solid #f6ca2a;\n    color: #f6ca2a;\n  }\n  button.antwort:nth-child(2) {\n    box-shadow: 0 0 10px #f65a5a;\n    border: 2px solid #f65a5a;\n    color: #f65a5a;\n  }\n</style>\n","<script>\n  import Frage from './Frage.svelte';\n  import Punkte from './Punkte.svelte';\n  import Antworten from './Antworten.svelte';\n\n  let insFrage = 0;\n  let plusPunkt = 0;\n  let minusPunkt = 0;\n  const fragen = [\n    { frage: 'Ärger', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Abend', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Abflug', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Absender', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Alkohol', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Anfang', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Angestellte',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Anruf', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Anrufbeantworter',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Anschluss',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Anzug', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Apfel', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Appetit', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'April', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Arbeitsplatz',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Arm', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Arzt', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Aufenthalt',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Aufzug', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'August', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Ausflug', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Ausgang', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Ausländer',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Ausweis', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Automat', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Bahnhof', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Bahnsteig',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Balkon', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Baum', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Beamte', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Bekannte', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Berg', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Beruf', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Besuch', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Betrag', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Bildschirm',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Bleistift',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Blick', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Bogen', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Brief', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Briefkasten',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Briefumschlag',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Bruder', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Buchstabe',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Bus', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Chef', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Computer', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Dank', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Deutsche', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Dezember', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Dienstag', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Doktor', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Dom', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Donnerstag',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Drucker', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Durst', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Ehemann', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Eingang', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Eintritt', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Einwohner',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Empfänger',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Empfang', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Enkel', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Erwachsene',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Export', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Führerschein',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Fahrer', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Fahrplan', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Familienname',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Familienstand',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Februar', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Fehler', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Film', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Fisch', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Flughafen',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Flur', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Fluss', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Fotoapparat',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Frühling', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Freitag', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Freund', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Friseur', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Fuß', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Fußball', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Garten', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Gast', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Geburtsort',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Geburtstag',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Glückwunsch',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Großvater',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Gruß', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Hals', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Haushalt', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Hausmann', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Herbst', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Herd', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Herr', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Hund', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Hunger', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Import', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Inhalt', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Januar', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Job', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Jugendliche',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Juli', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Junge', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Juni', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Käse', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Körper', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Kühlschrank',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Kaffee', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Kalender', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Kassettenrecorder',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Keller', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Kellner', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Kindergarten',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Kinderwagen',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Kiosk', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Koffer', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Kollege', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Kontakt', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Kopf', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Kredit', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Kreis', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Kuchen', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Kugelschreiber',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Kunde', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Kurs', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Löffel', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Laden', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Lehrer', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'LKW', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Loch', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Lohn', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'März', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Müll', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Magen', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Mai', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Mann', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Mantel', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Markt', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Mechaniker',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Mensch', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Messer', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Mittag', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Mittwoch', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Moment', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Monat', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Montag', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Morgen', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Motor', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Mund', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Nachbar', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Nachmittag',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Name', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Nebel', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Norden', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Notarzt', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Notfall', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'November', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Ober', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Oktober', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Opa', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Ort', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Osten', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Park', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Partner', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Pass', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Pkw', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Plan', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Platz', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Preis', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Prospekt', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Pullover', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Rücken', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Rabatt', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Raucher', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Raum', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Regen', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Reifen', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Reis', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Reiseführer',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Rock', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Rosé', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Rundgang', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Süden', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Saft', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Salat', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Satz', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Schüler', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Schalter', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Schild', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Schinken', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Schirm', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Schlüssel',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Schluss', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Schnee', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Schnupfen',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Schrank', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Schuh', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'See', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'September',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Service', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Sessel', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Sohn', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Sommer', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Sonntag', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Spaß', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Spaziergang',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Spielplatz',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Stempel', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Stock', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Stoff', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Strand', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Strom', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Student', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Stuhl', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Supermarkt',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Tag', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Teil', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Teller', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Teppich', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Termin', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Test', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Text', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Tipp', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Tisch', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Topf', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Tourist', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Turm', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Unfall', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Unterricht',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    {\n      frage: 'Unterschied',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Urlaub', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Vater', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Verein', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Verkäufer',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Verkehr', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Vermieter',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Vertrag', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Vogel', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Vormittag',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Vorname', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Wagen', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Wald', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Weg', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Wein', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Westen', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Wetter', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Wind', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Winter', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    {\n      frage: 'Wochentag',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 0,\n    },\n    { frage: 'Wunsch', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Zahn', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Zettel', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Zoll', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Zucker', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Zug', antworten: ['der', 'die', 'das'], richtigeAntwort: 0 },\n    { frage: 'Ärztin', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Übernachtung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Abfahrt', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Adresse', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Ampel', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Angestellte',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Angst', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Ankunft', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Anmeldung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Anrede', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Ansage', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Antwort', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Anzeige', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Apotheke', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Arbeit', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Aufgabe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Ausbildung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Auskunft', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Ausländerin',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Aussage', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Ausstellung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Autobahn', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Bäckerei', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Bahn', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Banane', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Bank', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Batterie', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Beamtin', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Bekannte', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Beratung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Berufsschule',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Bewerbung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Birne', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Bitte', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Blume', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Bluse', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Bohne', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Brücke', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Briefmarke',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Brieftasche',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Brille', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Butter', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'CD', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'CD-ROM', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Creme', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Dame', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Dauer', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Deutsche', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Disco', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Durchsage',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Dusche', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'E-Mail', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Ecke', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Ehefrau', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Einführung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Einladung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Eltern', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Entschuldigung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Erfahrung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Erlaubnis',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Ermäßigung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Erwachsene',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Fähre', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Führung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Fabrik', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Fahrkarte',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Familie', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Farbe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Ferien', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Feuerwehr',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Firma', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Flasche', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Flur', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Frage', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Frau', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Freizeit', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Freundin', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Frist', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Gabel', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Garage', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Gebühr', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Geldbörse',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Gesamtschule',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Geschwister',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Gesundheit',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Größe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Grippe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Großeltern',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Großmutter',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Grundschule',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Gruppe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Halbpension',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Halle', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Haltestelle',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Hand', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Hausaufgabe',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Hausfrau', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Heimat', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Heizung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Hilfe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Hose', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Idee', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Industrie',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Information',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Jacke', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Jugendherberge',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Jugendliche',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Küche', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Kündigung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Kamera', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Kanne', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Karte', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Kartoffel',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Kasse', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Kassette', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Katze', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Kenntnisse',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Kette', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Kirche', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Klasse', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Kleidung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Kneipe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Kollegin', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Kontrolle',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Kosmetik', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Krankenkasse',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Krankheit',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Kreditkarte',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Kreuzung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Kunde', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Kundin', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Lösung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Lampe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Landschaft',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Lebensmittel',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Lehre', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Lehrerin', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Leute', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Luft', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Lust', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Mülltonne',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Maschine', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Mehrwertsteuer',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Meinung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Menge', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Miete', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Milch', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Minute', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Mitte', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Mitteilung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Mittelschule',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Mode', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Musik', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Mutter', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Nähe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Nachbarin',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Nacht', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Natur', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Note', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Notiz', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Nudel', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Nummer', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Oma', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Operation',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Orange', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Ordnung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Panne', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Partei', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Partnerin',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Party', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Pause', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Pension', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Plastik', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Polizei', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Portion', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Post', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Postleitzahl',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Prüfung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Praxis', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Qualität', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Quittung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Raucherin',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Realschule',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Rechnung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Reinigung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Reise', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Reparatur',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Rezeption',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Rosé', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Rose', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'S-Bahn', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Sache', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Schülerin',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Scheckkarte',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Schokolade',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Schule', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Schwester',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'See', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Sehenswürdigkeit',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Seife', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Sekretärin',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Sekunde', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Sendung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Sonne', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Sorge', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Spülmaschine',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Speisekarte',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Sprache', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Sprachschule',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Sprechstunde',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Stadt', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Steuer', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Straße', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Straßenbahn',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Studentin',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Stunde', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Suppe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Tür', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Tüte', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Tankstelle',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Tasche', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Tasse', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Tochter', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Toilette', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Tomate', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Treppe', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'U-Bahn', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Uhr', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Universität',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Unterhaltung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Unterkunft',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Unterschrift',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Untersuchung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Verbindung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Verkäuferin',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Versicherung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Verspätung',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Volksschule',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Vorsicht', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Vorwahl', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Wäsche', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Welt', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Werkstatt',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    {\n      frage: 'Wirtschaft',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Woche', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Wohnung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Wolke', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Wurst', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Zahl', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Zeit', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Zeitschrift',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Zeitung', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    {\n      frage: 'Zigarette',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 1,\n    },\n    { frage: 'Zitrone', antworten: ['der', 'die', 'das'], richtigeAntwort: 1 },\n    { frage: 'Alter', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Angebot', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Appartement',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Auge', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Ausland', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Auto', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Büro', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Baby', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Bad', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Bein', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Beispiel', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Benzin', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Bett', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Bier', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Bild', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Blatt', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Blut', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Brötchen', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Brot', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Buch', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Cafe', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Dach', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Datum', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Ding', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Doppelzimmer',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Dorf', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Ei', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Einzelzimmer',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Eis', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Ende', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Erdgeschoss',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Ergebnis', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Essen', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Fahrrad', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Fax', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Fenster', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Fernsehgerät',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Fest', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Feuer', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Feuerzeug',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Fieber', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Fleisch', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Flugzeug', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Formular', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Foto', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Frühjahr', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Frühstück',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Fundbüro', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Gas', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Geburtsjahr',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    {\n      frage: 'Gegenteil',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Geld', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Gemüse', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Gepäck', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Gericht', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Geschäft', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Geschenk', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Geschirr', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Gesicht', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Gespräch', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Getränk', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Gewicht', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Gewitter', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Glück', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Glas', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Gleis', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Guthaben', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Gymnasium',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Hähnchen', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Haar', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Handtuch', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Handy', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Haus', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Hemd', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Herz', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Hobby', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Holz', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Internet', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Jahr', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Junge', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Kennzeichen',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Kfz', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Kind', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Kino', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Kleid', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Konsulat', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Konto', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Konzert', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Laden', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Lager', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Land', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Leben', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Lebensmittel',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Leid', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Licht', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Lied', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Loch', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Lokal', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Mädchen', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Möbel', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Mal', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Material', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Medikament',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Meer', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Messer', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Metall', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Mittel', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Moment', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Morgen', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Museum', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Obst', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Orange', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Öl', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Päckchen', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Paket', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Papier', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Parfüm', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Plastik', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Praktikum',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Problem', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Programm', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Rücken', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Radio', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Rathaus', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Reifen', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Reis', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Reisebüro',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    {\n      frage: 'Restaurant',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Rezept', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Rind', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Rosé', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Salz', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Schiff', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Schild', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Schloss', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Schwein', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Schwimmbad',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Service', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Sofa', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Sonderangebot',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Stück', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Standesamt',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Steuer', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Streichholz',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Studium', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Tag', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Taxi', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Teil', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Telefon', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Telefonbuch',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Theater', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Thema', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Ticket', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Tier', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Trinkgeld',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Video', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Wasser', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Werkzeug', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Wetter', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    {\n      frage: 'Wiederhören',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    {\n      frage: 'Wiedersehen',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    {\n      frage: 'Wochenende',\n      antworten: ['der', 'die', 'das'],\n      richtigeAntwort: 2,\n    },\n    { frage: 'Wort', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Zentrum', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Zeugnis', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n    { frage: 'Zimmer', antworten: ['der', 'die', 'das'], richtigeAntwort: 2 },\n  ];\n  let spielIndex = Math.floor(Math.random() * fragen.length);\n\n  function hideHome() {\n    document.querySelector('.Home').classList.add('hide');\n    document.querySelector('.Spiel').classList.remove('hide');\n  }\n  function pruefAntwort(antwortText) {\n    const istRichtig =\n      fragen[spielIndex].antworten.indexOf(antwortText) ===\n      fragen[spielIndex].richtigeAntwort;\n    if (istRichtig) {\n      plusPunkt += 1;\n      console.log('Hurra!');\n      document.body.style.backgroundColor = '#22e358';\n      document.querySelector('.ergebnissR').classList.remove('hidden');\n    } else {\n      minusPunkt += 1;\n      console.log('AAAa!');\n      document.body.style.backgroundColor = '#f65a5a';\n      document.querySelector('.ergebnissF').classList.remove('hidden');\n    }\n    insFrage += 1;\n    setTimeout(() => {\n      spielIndex = Math.floor(Math.random() * fragen.length);\n      document.body.style.backgroundColor = 'white';\n      document.querySelector('.ergebnissR').classList.add('hidden');\n      document.querySelector('.ergebnissF').classList.add('hidden');\n    }, 750);\n  }\n  function resetScore() {\n    insFrage = 0;\n    plusPunkt = 0;\n    minusPunkt = 0;\n  }\n</script>\n\n<div class=\"App\">\n  <div class=\"container\">\n    <div class=\"Home\">\n      <h1>Das Artikelspiel</h1>\n      <h2>Hallo!</h2>\n      <p class=\"halloText\">\n        Das ist ein Spiel für Artikeltraininning. Nach \"Beginn\" öffnet ein\n        Fenster, wo ein Wort und drei Artikeloptionen gibt. Jenach du korrekte\n        Antwort aussuchst, erhöht die Zahl der \"Rictige Antworte\", beim falschen\n        Auswahl ist es ganz umgekehrt. Näcstes Wort kommt automatisch eine\n        Sekunde nach Auswahl und es gibt zurzeit 680+ Wörter. Wichtig ist\n        allerdings nicht Punkte sammeln, sondern durch Übungen lernen.\n        <br />\n        Viel Spaß dabei!\n      </p>\n      <div class=\"beginnWrap\">\n        <button class=\"beginn\" on:click={hideHome}>Beginn</button>\n      </div>\n    </div>\n    <div class=\"Spiel hide\">\n      <div class=\"uebersicht\">\n        <Punkte\n          insFragen={insFrage}\n          plusPunkte={plusPunkt}\n          minusPunkte={minusPunkt}\n        />\n      </div>\n      <div class=\"ergebniss\">\n        <div class=\"ergebnissRwrap\">\n          <h2 class=\"ergebnissR hidden\">✓ Korrekt!</h2>\n        </div>\n        <div class=\"ergebnissFwrap\">\n          <h2 class=\"ergebnissF hidden\">✘ Falsch!</h2>\n        </div>\n      </div>\n      <Frage frageText={fragen[spielIndex].frage} />\n      <div class=\"antworten\">\n        <Antworten\n          antwortText={fragen[spielIndex].antworten[0]}\n          {pruefAntwort}\n        />\n        <Antworten\n          antwortText={fragen[spielIndex].antworten[1]}\n          {pruefAntwort}\n        />\n        <Antworten\n          antwortText={fragen[spielIndex].antworten[2]}\n          {pruefAntwort}\n        />\n      </div>\n      <div class=\"reset-btn-wrap\">\n        <input\n          type=\"image\"\n          on:click={resetScore}\n          class=\"reset-btn\"\n          src=\"./img/Reset.png\"\n          height=\"50\"\n          width=\"50\"\n          alt=\"Reset Button\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n  }\n\n  :global(body) {\n    background-color: white;\n  }\n\n  .App {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n  }\n\n  .hide {\n    display: none;\n  }\n\n  .hidden {\n    opacity: 0;\n  }\n\n  .container {\n    padding: 2vw;\n    width: 800px;\n    max-width: 90%;\n  }\n  .halloText {\n    line-height: 1.5;\n  }\n\n  .beginnWrap {\n    margin-top: 40px;\n    text-align: center;\n  }\n  .beginn {\n    padding: 10px 20px;\n    border-radius: 5px;\n    font-size: 24px;\n    font-weight: bold;\n    background-color: limegreen;\n    color: white;\n  }\n\n  div.uebersicht {\n    margin: 0 auto;\n    display: block;\n    text-align: center;\n    max-width: 233px;\n    height: 100px;\n    border: 1px solid white;\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 25%);\n  }\n\n  .ergebnissRwrap {\n    position: absolute;\n    left: 50%;\n    margin-left: -54px;\n    margin-top: 10px;\n    color: #22e358;\n  }\n  .ergebnissFwrap {\n    position: absolute;\n    left: 50%;\n    margin-left: -47px;\n    margin-top: 10px;\n    color: #f65a5a;\n  }\n\n  div.antworten {\n    text-align: center;\n  }\n\n  .reset-btn-wrap {\n    text-align: center;\n  }\n  .reset-btn {\n    border: none;\n    margin: 100px 10px 10px;\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","frageText","insFragen","plusPunkte","minusPunkte","antwortText","pruefAntwort","frage","antworten","hideHome","querySelector","classList","remove","insFrage","plusPunkt","minusPunkt","fragen","richtigeAntwort","spielIndex","Math","floor","random","console","log","body","style","backgroundColor","setTimeout"],"mappings":"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"}